name: Build & Publish vste APT repo

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

env:
  REPO_NAME: vste
  REPO_DIR: ./repo
  CODENAME: focal
  COMPONENTS: main
  ARCHITECTURES: amd64
  KEY_ID: ${{ secrets.KEY_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Clean previous repo
        run: rm -rf ./repo

      - name: Setup APT repo structure
        run: |
          mkdir -p ./repo/conf
          echo "Codename: $CODENAME" > ./repo/conf/distributions
          echo "Components: $COMPONENTS" >> ./repo/conf/distributions
          echo "Architectures: $ARCHITECTURES" >> ./repo/conf/distributions
          echo "SignWith: $KEY_ID" >> ./repo/conf/distributions
        env:
          CODENAME: focal
          COMPONENTS: main
          ARCHITECTURES: amd64
          KEY_ID: ${{ secrets.KEY_ID }}

      - name: Install packaging tools
        run: |
          sudo apt update
          sudo apt install -y devscripts debhelper dpkg-dev lintian build-essential reprepro gnupg 

      - name: Build .deb package
        working-directory: ./editor 
        run: dpkg-buildpackage -us -uc -b

      - name: Setup GPG
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          KEY_ID: ${{ secrets.KEY_ID }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          echo "$KEY_ID:6:" | gpg --batch --import-ownertrust

      - name: Create APT repo with reprepro
        env:
          REPO_DIR: ${{ env.REPO_DIR }}
          CODENAME: ${{ env.CODENAME }}
          COMPONENTS: ${{ env.COMPONENTS }}
          ARCHITECTURES: ${{ env.ARCHITECTURES }}
          KEY_ID: ${{ secrets.KEY_ID }}
        run: |
          mkdir -p $REPO_DIR/conf

          echo "Codename: $CODENAME" > $REPO_DIR/conf/distributions
          echo "Components: $COMPONENTS" >> $REPO_DIR/conf/distributions
          echo "Architectures: $ARCHITECTURES" >> $REPO_DIR/conf/distributions
          echo "SignWith: ${{ secrets.KEY_ID }}" >> $REPO_DIR/conf/distributions

          gpg --export --armor "${{ secrets.KEY_ID }}" > $REPO_DIR/gpg.key

          find ./editor -name "*.deb" -exec reprepro -b $REPO_DIR includedeb $CODENAME {} \;

          reprepro -b $REPO_DIR export

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.REPO_DIR }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: github-pages
    steps:
      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Summary
        run: |
          PAGE_URL=${{ steps.deployment.outputs.page_url }}
          echo "## âœ… vste APT repo deployed to $PAGE_URL"
          echo '```bash'
          echo "curl -sfLo /usr/share/keyrings/vste-archive-keyring.gpg \"$PAGE_URL/gpg.key\""
          echo "echo \"deb [signed-by=/usr/share/keyrings/vste-archive-keyring.gpg] $PAGE_URL $CODENAME $COMPONENTS\" | sudo tee /etc/apt/sources.list.d/vste.list"
          echo '```'
